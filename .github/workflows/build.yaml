name: Build
on:
  push:
  pull_request:

env:
  ELECTRON_VERSION: v36.3.2

jobs:
  build-asar:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 24
      - run: corepack enable
      - run: pnpm install
      - run: pnpm build
      - run: |
          cat - > .npmrc <<EOF
          node-linker=hoisted
          public-hoist-pattern=*
          shamefully-hoist=true"
          EOF
      - run: rm -rf node_modules && pnpm install --prod
      - run: rm -rf src .git webpack.config.* tsconfig.json
      - run: pnpx @electron/asar pack . ../motplayer.asar && mv ../motplayer.asar ./
      - uses: actions/upload-artifact@v4
        with:
          name: motplayer.asar
          path: motplayer.asar
  build-win:
    runs-on: ubuntu-latest
    needs: build-asar
    strategy:
      matrix:
        arch: [x64, arm64]
    steps:
      - run: wget -O electron.zip https://github.com/electron/electron/releases/download/${{ env.ELECTRON_VERSION }}/electron-${{ env.ELECTRON_VERSION }}-win32-${{ matrix.arch }}.zip
      - run: unzip electron.zip -d app
      - uses: actions/download-artifact@v4
        with:
          name: motplayer.asar
      - run: rm app/resources/*.asar
      - run: mv motplayer.asar app/resources/app.asar
      - run: mv app/{electron,motplayer}.exe
      - run: mv app/LICENSE{,.electron.txt}
      - run: cd app && zip -r ../motplayer-windows-${{ matrix.arch }}.zip .
      - uses: actions/upload-artifact@v4
        with:
          name: motplayer-windows-${{ matrix.arch }}.zip
          path: motplayer-windows-${{ matrix.arch }}.zip
  build-mac:
    runs-on: macos-latest
    needs: build-asar
    strategy:
      matrix:
        arch: [x64, arm64]
    steps:
      - run: wget -O electron.zip https://github.com/electron/electron/releases/download/${{ env.ELECTRON_VERSION }}/electron-${{ env.ELECTRON_VERSION }}-darwin-${{ matrix.arch }}.zip
      - run: unzip electron.zip -d app
      - uses: actions/download-artifact@v4
        with:
          name: motplayer.asar
      - run: rm app/Electron.app/Contents/Resources/*.asar
      - run: mv motplayer.asar app/Electron.app/Contents/Resources/app.asar
      - run: mv app/LICENSE{,.electron.txt}
      - run: mv app/{Electron,motplayer}.app
      - run: |
          defaults write $(pwd)/app/motplayer.app/Contents/Info.plist CFBundleIdentifier net.rinsuki.apps.motplayer
          defaults write $(pwd)/app/motplayer.app/Contents/Info.plist CFBundleDisplayName motplayer
          defaults write $(pwd)/app/motplayer.app/Contents/Info.plist CFBundleName motplayer
          defaults write $(pwd)/app/motplayer.app/Contents/Info.plist LSApplicationCategoryType public.app-category.games
          defaults delete $(pwd)/app/motplayer.app/Contents/Info.plist ElectronAsarIntegrity
      - run: codesign --force --sign - --deep ./app/motplayer.app
      - run: cd app && zip -r ../motplayer-mac-${{ matrix.arch }}.zip .
      - uses: actions/upload-artifact@v4
        with:
          name: motplayer-mac-${{ matrix.arch }}.zip
          path: motplayer-mac-${{ matrix.arch }}.zip
